{
    "navigation": {
        "design-h": "Customize to You",
        "design": "Design",
        "guide-h": "Installation guide",
        "cp-lidar": "Control Panel - LIDAR",
        "cp-pir": "Control Panel - PIR",
        "cp-us": "Control Panel - Ultrasonic",
        "sn-lidar": "Sensor Node - LIDAR",
        "sn-pir": "Sensor Node - PIR",
        "sn-us": "Sensor Node - Ultrasonic",
        "sn-mikro": "Sensor Node - Microwave",
        "sn-gas": "Sensor Node - Gas",
        "sn-fugt": "Sensor Node - Humidity",
        "sn-hall": "Sensor Node - Hall"
    },
    "welcome": {
        "title": "Alarms",
        "alarms1": "Alarms are sensor devices that you can assemble from parts. If a server is set up in your neighborhood, the alarms can be used to alert you and your neighbors in the event of a break-in. The alarm devices communicate with the server through",
        "alarms2": "signals, so they function independently of the WiFi in your home.",
        "design": "When setting up alarms, you must first decide which alarms to build and order parts. This is done from the Design section.",
        "install": "When you have all the necessary parts, and you have registered your alarm devices on the server, you can proceed to install your alarms. Installation Guides are available from the page menu to the left."
    },
    "design": {
        "version": "v1.0",
        "devicetypes0": "An alarm device consists of store-bought hardware components that you can assemble at home. The device is activated when you install NWA's alarm device software on the device. There are two types of alarm devices: Control Panels and Sensor Nodes. Both types of devices are outfitted with a sensor and can set off the alarm. Control Panels also have a screen and keypad that you can use to",
        "devicetypes1": "and disarm the house. Additionally, Control Panels have a panic button that you can use to set off the alarm regardless of whether the house is armed or not.",
        "sensors0": "A Sensor Node or Control Panel uses one of three sensors: ",
        "sensors1": ", ",
        "sensors2": ", or ",
        "sensors3": " sensor. Each sensor has a unique range.",
        "sensortable": {
            "type": "Sensor type",
            "model": "Model",
            "range": "Range",
            "angle": "Detection angle",
            "price": "Price",
            "lidartype": "LIDAR",
            "lidarmodel": "LIDAR-Lite v3",
            "lidarrange": "1-40m",
            "lidarangle": "Singular",
            "lidarprice": "$$$",
            "pirtype": "PIR",
            "pirmodel": "HC-SR505",
            "pirrange": "0-3m",
            "pirprice": "$",
            "ustype": "Ultrasonic",
            "usmodel": "LV-MaxSonar-EZ0",
            "usrange": "0.15-6.45m",
            "usprice": "$$",
            "mikrotype": "Microwave",
            "mikromodel": "RCWL-0516",
            "mikrorange": "0-8m",
            "mikroprice": "$",
            "gastype": "Gas",
            "gasmodel": "CCS811",
            "gasrange": "0-20 m2",
            "gasprice": "$",
            "fugttype": "Humidity",
            "fugtmodel": "DHT22",
            "fugtrange": "0-20 m2",
            "fugtprice": "$",
            "halltype": "Hall",
            "hallmodel": "KY-024",
            "hallrange": "-",
            "hallprice": "$"
        },
        "housedesign0": "You can decide which alarm devices you want to build based on your security needs. When designing your solution, you should include at least one Control Panel to arm the system. Below is an example of an alarm installation using",
        "housedesign1": "LIDAR",
        "housedesign2": ",",
        "housedesign3": "PIR",
        "housedesign4": ", and",
        "housedesign5": "ultrasonic",
        "housedesign6": "sensors indicating the range and width of the detection zones for the different sensors.",
        "deviceformintro": "If you would like to build one or more alarms for your own home, you can compile a list of all the parts needed for your alarm setup below. The list of devices and resulting parts list can be sent in an email for later reference. You can choose to give a device a descriptive name, like \"Living room\" in order to keep track of your alarms during installation and maintenance.",
        "device-form": {
            "add-device": "Add device",
            "build-parts-list": "Build parts list",
            "email-label": "Send list to email:",
            "email-placeholder": "example@address.com",
            "email-send": "Send email"
        },
        "parts-table": {
            "title": "Parts list",
            "amount": "Amount",
            "component": "Component",
            "retailer": "Suggested retailer"
        },
        "outro0": "A Neighborhood Watch Alarm System Server set up in your Neighborhood is necessary for your alarms to function. If there isn't yet a server in your area, please consider building one by visiting",
        "outro1": "the server page",
        "outro2": ". Before installation, contact the administrator of your local server and ensure that your house, devices, and phone number are registered. When registering, you need to supply a PIN-code that you will use to arm and disarm your house. Your server administrator will have access to this PIN-code, so please be sure to create a new PIN-code that you do not use for other security-related purposes."
    },
    "guides": {
        "version": "v1.0",
        "basic-intro": "This hardware guide will include diagrams followed by text. The information in the diagrams and the text is equivalent.",
        "cp-title": "Building a Control Panel",
        "cp-intro0": "The basis of a Control Panel is an",
        "cp-intro1": "This device uses the Arduino model Arduino Mega 2560 (as opposed to the smaller, less expensive Arduino UNO used for Sensor Nodes), as only the larger board supplies sufficient memory to run a Control Panel.",
        "sn-title": "Building a Sensor node",
        "sn-intro0": "The basis of a Sensor Node is an",
        "sn-intro1": "The sensor node uses an Arduino of the model Arduino UNO.",
        "lora-title": "1. Arduino and LoRa shield",
        "lora-intro0": "The Arduino needs a",
        "lora-intro1": "with",
        "lora-intro2": "capabilities in order to enable communication between alarm devices and the neighborhood server.",
        "lora-list0": "Attach the antenna to the side of the shield.",
        "lora-list1": "Move the yellow connector marked J_DIO3 by lifting it away from the board and placing it back on only the innermost pin, as seen in the above video.",
        "lora-list2": "Now place the shield on your Arduino, alligning all the connections closest to the end of the Arduino that has plugs.",
        "lora-list2-sn": "Now place the shield on your Arduino, alligning all the pins.",
        "breadboard-title": "2. Connect a breadboard",
        "breadboard-intro0": "A",
        "breadboard-intro1": "has pins that are connected in two connected outer rows on each side, and half columns in between, as shown in yellow on the below diagram. Plugging a wire into a pin on a row or column connects the wire to all pins on that row/column.",
        "breadboard-intro2": "In order to connect components to the alarm device, you will use a breadboard.",
        "breadboard-list0": "Power the breadboard by connecting the 5V pin on the Arduino to an outer row labeled on the breadboard with a male-to-male wire.",
        "breadboard-list1": "On the same edge of the breadboard, use another wire to connect the second outer row to the ground by a GND pin on the Arduino.",
        "panic-title": "3. Panic button",
        "panic-intro": "A panic button will enable you to activate the alarm at any time.",
        "panic-list0": "Add a push button to the middle area of the breadboard.",
        "panic-list1": "On the breadboard, connect the column of one pin of the push button to the 5V-powered row of the breadboard with a wire. A small wire will work best for these connections from one pin on the breadboard to another, but a regular longer male-to-male wire will work as well.",
        "panic-list2": "On the other end of the push button, connect the column to wire to the A1 pin of the Arduino.",
        "panic-list3-0": "On the same column, add a",
        "panic-list3-1": "that connects to a new column.",
        "panic-list4": "The column containing the second wire of the resistor should be connected to the ground (GND) row of the breadboard.",
        "interface-title": "4. Display and keypad",
        "interface-intro": "Now you are ready to add the interface of the Control Panel: The keypad and the",
        "interface-list0-0": "Take 8",
        "interface-list0-1": "and connect the keypad pins from left to right to the Arduino pins 22-36.",
        "interface-list1": "Dial up the contrast of the LCD by turning the dial (with the appearance of the head of a screw) on the back of the LCD about 45 degrees clockwise.",
        "interface-list2": "Connect the GND and VCC pins on the LCD to the power and ground rows of the breadboard with 2",
        "interface-list3": "Using 2 male-to-female wires, connect the SDA and SCL of the LCD to two columns on the breadboard.",
        "interface-list4": "Connect the columns to the corresponding SDA and SCL pins on the Arduino.",
        "cp-basic-outro": "Your Control Panel should now look like the above figure. At this point, all you need to add is a sensor.",
        "sn-basic-outro": "Your Sensor Node should now look like the above figure. At this point, you are ready to add the sensor.",
        "cp-lidar-intro": "The LIDAR Control Panel is an alarm device capable of arming and disarming a house, sending a panic notification and sensing movement in a range of 40 meters.",
        "cp-ultra-intro": "The Ultrasonic Control Panel is an alarm device capable of arming and disarming a house, sending a panic notification and sensing movement in a range of 6+ meters.",
        "cp-pir-intro": "The PIR Control Panel is an alarm device capable of arming and disarming a house, sending a panic notification and sensing movement in a wide-angled range of 3 meters.",
        "sn-lidar-intro": "The LIDAR Sensor Node is an alarm device capable of sensing movement in a range of 40 meters.",
        "sn-ultra-intro": "The Ultrasonic Sensor Node is an alarm device capable sensing movement in a range of 6+ meters.",
        "sn-pir-intro": "The PIR Senor Node is an alarm device capable sensing movement in a wide-angled range of 3 meters.",
        "sn-mikro-intro": "The Microwave Sensor Node is an alarm device capable of sensing movement in a range of 8 meters.",
        "sn-gas-intro": "The Gas Sensor Node is an alarm device capable of detecting open windows and open outer doors in rooms with an area of 20 square meters.",
        "sn-fugt-intro": "The Humidity Sensor Node is an alarm device capable of detecting open windows and open outer doors in rooms with an area of 20 square meters.",
        "sn-hall-intro": "The Hall Sensor Node is an alarm device capable of detecting when a door or windows is opened putting a magnet on the window or door and the sensor near it.",
        "lidar-title": "5. Adding the LIDAR sensor",
        "lidar-title-sn": "3. Adding the LIDAR sensor",
        "lidar-intro": "The LIDAR sensor has a long range and a laser-like narrow angle of detection. The LIDAR has more wire connections than needed for this device, so the excess wires are connected to ground.",
        "lidar-list0": "Connect the included wires to the LIDAR.",
        "lidar-list1": "The black wire should connect to the ground row on the breadboard.",
        "lidar-list2": "Connect the blue wire to the SDA column of the breadboard, and the green wire to SCL.",
        "lidar-list2-sn": "Connect the blue wire to the SDA pin of the Arduino, and the green wire to the SCL pin.",
        "lidar-list3": "The yellow and orange wires should be connected to ground like the black wire.",
        "lidar-list4": "Connect the red wire to the power row on the breadboard.",
        "pir-title": "5. Adding the PIR sensor",
        "pir-title-sn": "3. Adding the PIR sensor",
        "pir-intro": "The PIR sensor needs to have a resistor in its circuit in order to give more reliable readings. In this setup, the resistance is achieved by connecting a",
        "pir-list0": "Place the MOSFET between three columns on the half of the breadboard that is closest to the power and ground rows.",
        "pir-list1": "Place the PIR sensor on the opposite half of the breadboard to the MOSFET.",
        "pir-list2": "Connect the center column of the PIR to one of the outer columns of the MOSFET.",
        "pir-list3": "The center column of the MOSFET should be connected to the power on the breadboard.",
        "pir-list4": "On the last column of the MOSFET, connect a wire to the A0 pin on the Arduino, and a resistor to an otherwise column on the breadboard.",
        "pir-list5": "Connect the column with the resistor to the ground row.",
        "ultra-title": "5. Adding the ultrasonic sensor",
        "ultra-title-sn": "2. Adding the ultrasonic sensor",
        "ultra-list0": "The ultrasonic sensor has a series of small pins on one side. To connect the sensor, we will need to use the sensor pins labeled GND, +5, and AN. In order to connect these to a wire, insert the pin of a longer 'small' wire through each sensor pin, and wrap the metal pin around the edge of the sensor backing so each wire is in constant contact with the inner edge of the sensor pin. If you have access to soldering equipment, this connection should be soldered.",
        "ultra-list1-sn": "Connect the end of the GND wire to a GND pin on the Arduino.",
        "ultra-list1-cp": "Connect the end of the GND wire to the GND row of the breadboard.",
        "ultra-list2-cp": "Connect the end of the +5 wire to the power row of the breadboard.",
        "ultra-list2-sn": "Connect the end of the +5 wire to the 5V pin on the Arduino.",
        "ultra-list3": "The final wire needs to be connected to the A0 pin of the Arduino.",
        "mikro-title": "5. Addding the microwave sensor",
        "mikro-title-sn": "3. Adding the microwave sensor",
        "mikro-list0": "Place the microwave sensor on the opposite half of the breaboard. ",
        "mikro-list1": "Connect OUT on the microwave sensor to a digital pin on the shield.",
        "mikro-list2": "Connect Vin to 5V.",
        "mikro-list3": "Connect GND to ground.",
        "gas-title": "5. Adding the gas sensor.",
        "gas-title-sn": "2. Adding the gas sensor.",
        "gas-list0": "Place the gas sensor on the opposite half of the breadboard.",
        "gas-list1": "Connect SCL on the gas sensor to SCL on the shield.",
        "gas-list2": "Connect SDA on the gas sensor to SDA on the shield.",
        "gas-list3": "Connect WAKE on the gas sensor to ground.",
        "gas-list4": "Connect Vin to 5V.",
        "gas-list5": "Connect GND to ground.",
        "fugt-title": "5. Adding the humidity sensor",
        "fugt-title-sn": "2. Adding the humidity sensor",
        "fugt-list0": "Place the humidity sensor on the opposite half of the breadboard so the pattern is facing you.",
        "fugt-list1": "Connect 5V from the shield to the power row on the breadboard.",
        "fugt-list2": "Connect a wire from the power row to the other side of the breadboard (the side where the humidity sensor is), but don't place it in the same columns as the humidity sensor.",
        "fugt-list3": "From this column connect a wire to the left outermost leg of the humidity sensor.",
        "fugt-list4": "Once again connect from the column a 10 kOhm resistor which goes over to the second leg of the humidity sensor.",
        "fugt-list5": "Connect a wire from the second leg to a digital pin on the shield.",
        "fugt-list6": "Connect a wire from the fourth leg to ground.",
        "hall-title": "5. Adding the hall sensor",
        "hall-title-sn": "2. Adding the hall sensor",
        "hall-list0": "Place the hall sensor on the opposite half of the breadboard.",
        "hall-list1": "Connect 5V from the shield to the + on the sensor.",
        "hall-list2": "Connect D0 to a digital pin on the shield.",
        "hall-list3": "Connect G to ground.",
        "cp-hardware-outro": "You have now built an alarm device! Time to install the Control Panel software.",
        "sn-hardware-outro": "You have now built an alarm device! Time to install the Sensor Node software.",
        "tooltip-explain0": "Your alarm device needs to be assembled and have software installed in order to function. This guide will take you through the steps of setting up an alarm device: Hardware assembly, software installation, and how to use the device. Expressions shown in",
        "tooltip-explain1": "will display information when you hover your mouse over them.",
        "tab-hardware": "Hardware Setup",
        "next-tab": "Next: ",
        "tab-software": "Software Installation",
        "tab-use-cp": "Using the Control Panel",
        "tab-use-sn": "Using the Sensor Node",
        "parts-list": "You will need:",
        "part": {
            "ttn": "TTN Device values provided by your local server administrator",
            "mega": "Arduino Mega 2560",
            "uno": "Arduino UNO",
            "lora": "Dragino LoRa shield for Arduino",
            "keypad": "4x4 Keypad",
            "lcd": "16x2 LCD with I2C interface",
            "breadboard": "breadboard",
            "button": "push button",
            "resistor": "resistor",
            "lidar": "LIDAR-Lite v3 with cables",
            "pir": "PIR sensor model HC-SR505",
            "mosfet": "MOSFET",
            "ultra": "ultrasonic range finder LV-MaxSonar-EZ0",
            "mikro": "Microwave sensor RCWL-0516",
            "gas": "Gas sensor CCS-811",
            "fugt": "Humidity sensor DHT22",
            "hall": "Hall sensor KY-024",
            "m2m": "male-to-male wires",
            "jump": "small wires",
            "f2m": "male-to-female wires",
            "power": "1 9V power supply OR 1 USB A to B cable and 1 5V wall mount USB adaptor"
        },
        "software": {
            "ide-title": "Download and install editing program",
            "ide-intro": "Your alarm device needs to have the device-specific NWA sotware installed in order to function in the alarm system.",
            "a-lidar-cp": "A LIDAR Control Panel",
            "a-pir-cp": "A PIR Control Panel",
            "a-ultra-cp": "An Ultrasonic Control Panel",
            "a-lidar-sn": "A LIDAR Sensor Node",
            "a-pir-sn": "A PIR Sensor Node",
            "a-ultra-sn": "An Ultrasonic Sensor Node",
            "a-mikro-sn": "A Microwave Sensor Node",
            "a-gas-sn": "A Gas Sensor Node",
            "a-fugt-sn": "A Humidity Sensor Node",
            "a-hall-sn": "A Hall Sensor Node",
            "list-chirpstack": "2 Chirpstack values unique to your device. Please request that your server adminstrator provide you with these values.",
            "list-computer": "A computer with a USB port",
            "list-cable": "A USB A to B cable",
            "ide-install0": "First, make sure you have the official",
            "ide-install1": "installed on your computer. If not, go to the official Arduino webpage and download the version suited to your computer. The",
            "ide-install2": "is used to adapt and upload the NWA alarm device software to your alarm device.",
            "new-file": "When you open your installed Arduino program, a new file will open. The file is called a sketch file. A sketch file is stored with a .ino ending on your device. If you have already used the Arduino IDE and need a fresh file, press the New button to open a new file.",
            "cp-code0": "Replace the contents of the new file with the Control Panel software by copying and pasting the contents of the",
            "cp-code-lidar": "LIDAR Control Panel code",
            "cp-code-pir": "PIR Control Panel code",
            "cp-code-ultra": "Ultrasonic Control Panel code",
            "sn-code0": "Replace the contents of the new file with the Sensor Node software by copying and pasting the contents of the",
            "sn-code-lidar": "LIDAR Sensor Node code",
            "sn-code-pir": "PIR Sensor Node code",
            "sn-code-ultra": "Ultrasonic Sensor Node code",
            "sn-code-mikro": "Microwave Sensor Node code",
            "sn-code-gas": "Gas Sensor Node code",
            "sn-code-fugt": "Humidity Sensor Node code",
            "sn-code-hall": "Hall Sensor Node code",
            "cp-code1": ".",
            "lib-title": "Importing libraries",
            "lib-intro0": "The code uses",
            "lib-intro1": "to function as needed.",
            "lib-ide-title": "Installation of libraries supplied in the IDE",
            "lib-ide-intro0": "In the Arduino IDE, go to the Sketch tab and then to (Include Library -> Manage Libraries).",
            "lib-ide-intro1": "This will open the Library Manager, where you must search for and install the following:",
            "lib-by": "by",
            "lib-version": "Version",
            "lib-zip-title": "Installation of third party libraries from the web",
            "lib-zip-siphash0": "Download the SipHash library (used to encrypt your PIN-code) from the",
            "lib-zip-siphash1": "SipHash Library for Arduino webpage",
            "lib-zip-siphash2": "under the Installation section. Note the location of the downloaded .ZIP file, and install it using the Arduino IDE under (Sketch -> Include Library -> Add .ZIP Library).",
            "lib-zip-lmic0": "Download the Arduino-LMIC library (used for LoRa communication) from the",
            "lib-zip-lmic1": "Arduino-LMIC GitHub page",
            "lib-zip-lmic2": "by clicking (Clone or download -> Download ZIP) on the page. Note the location of the downloaded .ZIP file, and install it using the Arduino IDE under (Sketch -> Include Library -> Add .ZIP Library).",
            "upload-title": "Prepare and upload the software",
            "upload-chirpstack1": "Before you can upload the code and start using the device, you need to add the device to the neighbourhood watch system. To do this, two values must be modified inside of the file. Namely APPKEY[16] and DEVEUI[8]. To get the value for these variables, an admin needs to create a device inside of the application in the Chirpstack Web Interface. A guide can be found in the ADDING DEVICES section of the guide at  .",
            "upload-chirpstack2": " Once this is done, the admin will give you two keys for the two variables. These need to be converted to the proper format as dispalyed in the file E.g",
            "upload-chirpstack3": "Notice how the values are still the same, but they have a 0x prepended. Simply add 0x infront of all the values. Do this for both the APPKEY and the DEVEUI",
            "upload-save": "If you would like to save the file for future reference and maintenance, press the Save button, and give the file a name with the device number prepended and the alarm device type indicated, e.g.",
            "upload-board-mega": "In the IDE, specify which model of Arduino you are using: (Tools -> Board -> Arduino Mega or Mega 2560).",
            "upload-board-uno": "In the IDE, specify which model of Arduino you are using: (Tools -> Board -> Arduino UNO).",
            "upload-connect-cp": "Plug your Control Panel into the computer by connecting a USB A to B cord from the Arduino to the computer. When the Control Panel is plugged in, a light should go off on the Arduino. In the IDE, go to (Tools -> Port) and select the port that has an Arduino Mega or Mega 2560.",
            "upload-connect-sn": "Plug your Sensor Node into the computer by connecting a USB A to B cord from the Arduino to the computer. When the Sensor Node is plugged in, a light should go off on the Arduino. In the IDE, go to (Tools -> Port) and select the port that has an Arduino/Genuino UNO.",
            "upload-cp": "With the Control Panel plugged in, press the Upload button. Go to (Tools->Serial Monitor), this will open a text output from the connected Control Panel. The output should look something like the output on the image below.",
            "upload-sn": "With the Sensor Node plugged in, press the Upload button. Go to (Tools->Serial Monitor), this will open a text output from the connected Control Panel. The output should look something like the output on the image below.",
            "outro-cp": "Now your Control Panel is ready to use. The installed Control Panel software will run whenever the device is connected to power.",
            "outro-sn": "Now your Sensor Node is ready to use. The installed Sensor Node software will run whenever the device is connected to power."
        },
        "use": {
            "sn-intro": "The Sensor Node can trigger an alarm when it is armed. The triggering of the alarm is transmitted to the server if a connection to the server is successfully established. The Sensor Node is only armed when a Control Panel has armed the house, and the alarm device has received this information from the server.",
            "power": "The alarm device is powered by plugging it into a 9V power supply. Alternately, the USB A to B cable used for intallation along with a 5V wall mount USB adaptor can also power the device. If you want to secure your device against power outages, you can power the device with a 9V battery.",
            "placement": "When placing the alarm device in your home, try to place it in a discreet position, and if possible, secure the sensor to a solid surface. When the device is moved, you run the risk of connections falling out. An ideal placement would be out of the way of daily movement, stored inside a box or casing with a cutout for the sensor. This would also help protect the device from dust.",
            "alarm": "When a device is armed and it detects movement, it will communicate to the server to send out an alarm. Upon receiving the communication, the server sends out text messages to all members of the neighborhood alarm system.",
            "calibrate": "When starting up the device, the sensors recalibrate. This takes a few moments. The device is by default disarmed when starting up. If the house is armed, the device will become armed within a few minutes.",
            "restart": "Somewhere on the surface of the Arduino, there is a small button. When pressed, the Arduino and its software restarts. If a device is restarted while the house is armed, the device will be unarmed for a few minutes before becoming armed.",
            "arm": "The device LCD will display an option to type your pin, along with a status on whether your system is armed, disarmed, or the panic or alarm is activated. In order to arm or disarm the system, type your PIN-code on the keypad followed by #. The LCD should indicate how many numbers you have typed. If you want to clear what you've typed, press *. When the pin code is sent, the screen will display a \"Waiting for ack\" message to indicate that it is expecting an acknowledgement from the server. This may take several minutes, and your house is not armed before the response from the server arrives. Any other active alarm devices in your home will become armed within a few more minutes. If the \"Waiting for ack\" message does not change after 10 minutes, there is an issue with the connection to the server. Restart your alarm device and contact the server administrator.",
            "panic": "Regardless of whether your house is armed, you can press the panic button to set off the alarm and notify your neighbors of a potential danger.",
            "interval-cp": "Please note that your alarm device communicates with the server at a regular interval of a few minutes. This includes information on the panic, alarm, and arming status of your home. If you have pressed the panic button or entered your PIN-code, you may have up to a few minutes before information is transmitted to the server. If your alarm is restarted within this time period, no information will be transmitted.",
            "interval-sn": "Please note that your alarm device communicates with the server at a regular interval of a few minutes. This includes information on whether the alarm should go off. If your alarm is restarted within this time period, no information will be transmitted.",
            "offline": "If an alarm device stops communicating to the server, the server will sound the alarm. If your house is armed, your neighbors will be notified of the alarm. If not, only you will receive a text notification on the status of your device."
        }
    },
    "tooltip": {
        "lidarname": "LIDAR",
        "lidardesc": "A LIDAR measures distance by bouncing a laser-like pulses off its target. If a person or object enters the detection field of the LIDAR, the measured distance will change.",
        "pirname": "PIR",
        "pirdesc": "A PIR sensor detects infrared radiation like the heat emitted by a person or object. If a person or object moves withis the detection range of the PIR sensor, the sensor will detect an uneven change in heat.",
        "ultraname": "ultrasonic",
        "ultradesc": "An ultrasonic sensor measures distance by emitting ultrasonic waves, and measuring the reflecting sound to determine the distance to the nearest object in its detection range. When a person or objects enters the detection range, this distance will change.",
        "mikroname": "Microwave",
        "mikrodesc": "A microwave sensor emits microwaves and measure the doppler effect to determine where a person is within the detection range.",
        "gasname": "Gas,",
        "gasdesc": "A gas sensor measure the CO2-level in a room. If a window or an outer door is opened the CO2-level will drop and trigger an alarm.",
        "fugtname": "Humidity",
        "fugtdesc": "A humidity sensor measures the humidity in a roomm. If a window or an outer door is opened the humidity will drop and trigger an alarm.",
        "hallname": "Hall.",
        "halldesc": "A hall sensor detects magnetic fields. By putting a magnet on a door or window it is possible to determine whether that door or window is open using this sensor.",
        "tooltipname": "grey",
        "tooltipdesc": "Hi, I'm a tooltip!",
        "loraname": "LoRa",
        "loradesc": "Long Range, a low-power wide-area network (LPWAN) protocol.",
        "armname": "arm",
        "armdesc": "When a house is armed, the alarm will be set off when an alarm device in the house senses movement.",
        "arduinoname": "Arduino.",
        "arduinodesc": "An Arduino is a small computer that can run special Arduino software.",
        "shieldname": "shield",
        "shielddesc": "A board that can be plugged on top of an Arduino and extend its capabilities.",
        "breadboardname": "breadboard",
        "breadboarddesc": "A board with interconnected pins that can be used to connect wires without soldering",
        "mosfetnname": "MOSFET.",
        "mosfetdesc": "A MOSFET (metal-oxide-semiconductor field-effect transistor) is a transistor that acts as a valve or gate between two connections. The gate is controlled by a third connection to the MOSFET.",
        "resistorname": "resistor",
        "resistordesc": "A resistor is an electrical component that reduces electric current. For this device, the resistor enables a clear reading of when the panic button is and isn't pushed.",
        "lcdname": "LCD.",
        "lcddesc": "Liquid Crystal Display, a type of screen.",
        "m2mname": "male-to-male wires",
        "m2mdesc": "Wires that have an outward pin at both ends.",
        "f2mname": "male-to-female wires.",
        "f2mdesc": "Wires with an outgoing pin at one end and a plug-like pin at the other end.",
        "idename": "IDE",
        "idedesc": "Integrated Development Environment, used to edit code.",
        "libname": "libraries",
        "libdesc": "In software, a library is a collection of files that can be referenced in code."
    }
}